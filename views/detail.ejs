<%- include('partials/header') %>

<div class="max-w-6xl mx-auto">
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold text-gray-800">Detail Komparasi</h2>
            <a href="/history" class="text-blue-600 hover:text-blue-800">
                <i class="fas fa-arrow-left mr-1"></i> Kembali ke Riwayat
            </a>
        </div>
        
        <div class="mb-6 border-b pb-4">
            <div class="flex flex-wrap md:flex-nowrap justify-between">
                <div class="w-full md:w-1/2 mb-4 md:mb-0">
                    <p class="text-gray-600 mb-1">Test Case:</p>
                    <p class="text-xl font-medium"><%= comparison.testCase %></p>
                </div>
                
                <div class="w-full md:w-1/2 flex flex-col md:items-end">
                    <div class="mb-2">
                        <p class="text-gray-600 mb-1">Tanggal:</p>
                        <p class="font-medium"><%= new Date(comparison.createdAt).toLocaleString('id-ID') %></p>
                    </div>
                    
                    <div>
                        <% 
                            let differences = {};
                            let count = 0;
                            
                            try {
                                // Periksa apakah differences sudah dalam bentuk objek atau string
                                if (typeof comparison.differences === 'object' && comparison.differences !== null) {
                                    differences = comparison.differences;
                                } else if (typeof comparison.differences === 'string') {
                                    differences = JSON.parse(comparison.differences);
                                }
                                count = Object.keys(differences).length;
                            } catch (e) {
                                console.error('Error parsing differences:', e);
                            }
                            
                            let badgeClass = count > 0 ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800';
                        %>
                        <span class="px-3 py-1 text-sm rounded-full <%= badgeClass %>">
                            <%= count %> perbedaan terdeteksi
                        </span>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
            <!-- HPUX Image -->
            <div class="border rounded-md overflow-hidden">
                <div class="bg-gray-100 px-4 py-2 font-medium">HPUX Image</div>
                <div class="p-2">
                    <img src="/<%= comparison.hpuxImagePath %>" alt="HPUX Image" class="w-full h-auto">
                </div>
            </div>
            
            <!-- Linux Image -->
            <div class="border rounded-md overflow-hidden">
                <div class="bg-gray-100 px-4 py-2 font-medium">Linux Image</div>
                <div class="p-2">
                    <img src="/<%= comparison.linuxImagePath %>" alt="Linux Image" class="w-full h-auto">
                </div>
            </div>
        </div>
        
        <div class="border-t pt-4">
            <h3 class="text-xl font-semibold mb-4">Hasil Ekstraksi dan Perbandingan</h3>
            
            <div class="mb-4">
                <div class="flex justify-between items-center mb-2">
                    <div>
                        <button id="toggleDifferences" class="text-blue-600 hover:text-blue-800 text-sm">
                            <i class="fas fa-filter mr-1"></i> Tampilkan Hanya Perbedaan
                        </button>
                    </div>
                    
                    <div>
                        <button id="downloadJson" class="bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 text-sm">
                            <i class="fas fa-download mr-1"></i> Unduh JSON
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- HPUX Results -->
                <div class="result-container">
                    <h4 class="text-lg font-semibold mb-3 bg-gray-100 p-2 rounded-md">Hasil HPUX</h4>
                    <div id="hpuxResults" class="p-4 border border-gray-200 rounded-md bg-gray-50 overflow-auto max-h-96">
                    <% 
                        try {
                            // Parse data dari database - handle baik object maupun string
                            let hpuxData;
                            
                            if (typeof comparison.hpuxExtractedData === 'object' && comparison.hpuxExtractedData !== null) {
                                hpuxData = comparison.hpuxExtractedData;
                            } else if (typeof comparison.hpuxExtractedData === 'string') {
                                hpuxData = JSON.parse(comparison.hpuxExtractedData);
                            } else {
                                hpuxData = { data: [] };
                            }
                            
                            // Cek apakah data memiliki struktur yang diharapkan
                            if (hpuxData && hpuxData.data && Array.isArray(hpuxData.data)) {
                                // Definisikan urutan kolom yang diinginkan
                                const orderedColumns = [
                                    'Offset', 'No', 'Name', 'DESC', 'Form', 'VLen', 'FType', 'Len', 'Data'
                                ];
                    %>
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200 border">
                                <thead>
                                    <tr class="bg-gray-100">
                                        <% orderedColumns.forEach(column => { %>
                                            <th class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-r"><%= column %></th>
                                        <% }); %>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    <% hpuxData.data.forEach((item, index) => { 
                                        const rowClass = index % 2 === 0 ? 'bg-white' : 'bg-gray-50';
                                    %>
                                        <tr class="<%= rowClass %> data-row">
                                            <% orderedColumns.forEach(column => { 
                                                const value = item.hasOwnProperty(column) ? item[column] : '';
                                            %>
                                                <td class="px-3 py-2 text-sm text-gray-500 border-r"><%= value %></td>
                                            <% }); %>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                    <% } else { %>
                        <p>Data tidak valid atau tidak dalam format array.</p>
                        <% if (typeof comparison.hpuxExtractedData === 'object') { %>
                            <p>Data Type: Object</p>
                        <% } else { %>
                            <p>Data Type: <%= typeof comparison.hpuxExtractedData %></p>
                        <% } %>
                    <% }
                        } catch(e) { %>
                            <p class="text-red-500">Error menampilkan data HPUX: <%= e.message %></p>
                            <p class="text-gray-700">Data type: <%= typeof comparison.hpuxExtractedData %></p>
                            <% if (typeof comparison.hpuxExtractedData === 'string') { %>
                                <p class="text-gray-700">First few characters: <%= comparison.hpuxExtractedData.substring(0, 50) %>...</p>
                            <% } %>
                        <% } 
                    %>
                    </div>
                </div>
                
                <!-- Linux Results -->
                <div class="result-container">
                    <h4 class="text-lg font-semibold mb-3 bg-gray-100 p-2 rounded-md">Hasil Linux</h4>
                    <div id="linuxResults" class="p-4 border border-gray-200 rounded-md bg-gray-50 overflow-auto max-h-96">
                    <% 
                        try {
                            // Parse data dari database - handle baik object maupun string
                            let linuxData;
                            
                            if (typeof comparison.linuxExtractedData === 'object' && comparison.linuxExtractedData !== null) {
                                linuxData = comparison.linuxExtractedData;
                            } else if (typeof comparison.linuxExtractedData === 'string') {
                                linuxData = JSON.parse(comparison.linuxExtractedData);
                            } else {
                                linuxData = { data: [] };
                            }
                            
                            // Cek apakah data memiliki struktur yang diharapkan
                            if (linuxData && linuxData.data && Array.isArray(linuxData.data)) {
                                // Definisikan urutan kolom yang diinginkan
                                const orderedColumns = [
                                    'Offset', 'No', 'Name', 'DESC', 'Form', 'VLen', 'FType', 'Len', 'Data'
                                ];
                    %>
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200 border">
                                <thead>
                                    <tr class="bg-gray-100">
                                        <% orderedColumns.forEach(column => { %>
                                            <th class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-r"><%= column %></th>
                                        <% }); %>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    <% linuxData.data.forEach((item, index) => { 
                                        const rowClass = index % 2 === 0 ? 'bg-white' : 'bg-gray-50';
                                    %>
                                        <tr class="<%= rowClass %> data-row">
                                            <% orderedColumns.forEach(column => { 
                                                const value = item.hasOwnProperty(column) ? item[column] : '';
                                            %>
                                                <td class="px-3 py-2 text-sm text-gray-500 border-r"><%= value %></td>
                                            <% }); %>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                    <% } else { %>
                        <p>Data tidak valid atau tidak dalam format array.</p>
                        <% if (typeof comparison.linuxExtractedData === 'object') { %>
                            <p>Data Type: Object</p>
                        <% } else { %>
                            <p>Data Type: <%= typeof comparison.linuxExtractedData %></p>
                        <% } %>
                    <% }
                        } catch(e) { %>
                            <p class="text-red-500">Error menampilkan data Linux: <%= e.message %></p>
                            <p class="text-gray-700">Data type: <%= typeof comparison.linuxExtractedData %></p>
                            <% if (typeof comparison.linuxExtractedData === 'string') { %>
                                <p class="text-gray-700">First few characters: <%= comparison.linuxExtractedData.substring(0, 50) %>...</p>
                            <% } %>
                        <% } 
                    %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include('partials/footer') %>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle differences filter
        const toggleButton = document.getElementById('toggleDifferences');
        if (toggleButton) {
            let showOnlyDifferences = false;
            
            toggleButton.addEventListener('click', function() {
                showOnlyDifferences = !showOnlyDifferences;
                
                // Update button text
                if (showOnlyDifferences) {
                    this.innerHTML = '<i class="fas fa-filter mr-1"></i> Tampilkan Semua Data';
                } else {
                    this.innerHTML = '<i class="fas fa-filter mr-1"></i> Tampilkan Hanya Perbedaan';
                }
                
                // Toggle display of rows with differences
                // Fitur ini akan diimplementasikan di masa mendatang
                alert('Fitur filter perbedaan akan diimplementasikan pada versi berikutnya.');
            });
        }
        
        // Download JSON data
        const downloadButton = document.getElementById('downloadJson');
        if (downloadButton) {
            downloadButton.addEventListener('click', function() {
                fetch('/api/comparison/<%= comparison.id %>')
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'success') {
                            // Create JSON file and trigger download
                            const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
                            const url = URL.createObjectURL(blob);
                            const a = document.createElement('a');
                            a.href = url;
                            a.download = `comparison-<%= comparison.id %>.json`;
                            document.body.appendChild(a);
                            a.click();
                            document.body.removeChild(a);
                            URL.revokeObjectURL(url);
                        } else {
                            alert('Gagal mengunduh data: ' + (data.message || 'Error tidak diketahui'));
                        }
                    })
                    .catch(error => {
                        console.error('Error downloading comparison:', error);
                        alert('Gagal mengunduh data JSON');
                    });
            });
        }
    });
</script>
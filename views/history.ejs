<%- include('partials/header') %>

<div class="max-w-6xl mx-auto">
    <div class="bg-white rounded-lg shadow-md p-4 sm:p-6 mb-8">
        <% if (locals.error && error) { %>
            <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4">
                <p><%= error %></p>
            </div>
        <% } %>
        
        <h2 class="text-xl sm:text-2xl font-bold mb-4 sm:mb-6 text-gray-800">Riwayat Test</h2>
        
        <div class="mb-4 sm:mb-6">
            <div class="flex flex-col space-y-3 sm:space-y-0 sm:flex-row sm:justify-between sm:items-center">
                <div class="flex items-center">
                    <span class="text-gray-600 mr-2">Total:</span>
                    <span class="font-medium text-blue-600"><%= allTests.length %> tests</span>
                </div>
                
                <div class="flex flex-col sm:flex-row sm:items-center sm:space-x-4 space-y-2 sm:space-y-0">
                    <div class="flex items-center">
                        <input type="checkbox" id="filterComparison" class="mr-1 test-filter" checked data-type="comparison">
                        <label for="filterComparison" class="text-sm text-gray-600">Komparasi Files</label>
                    </div>
                    <div class="flex items-center">
                        <input type="checkbox" id="filterTestCase" class="mr-1 test-filter" checked data-type="testcase">
                        <label for="filterTestCase" class="text-sm text-gray-600">Test Cases</label>
                    </div>
                    <div class="flex items-center">
                        <input type="checkbox" id="filterCsvComparison" class="mr-1 test-filter" checked data-type="csvcomparison">
                        <label for="filterCsvComparison" class="text-sm text-gray-600">CSV/TXT</label>
                    </div>
                    <div class="flex items-center">
                        <input type="checkbox" id="filterNonIso" class="mr-1 test-filter" checked data-type="noniso">
                        <label for="filterNonIso" class="text-sm text-gray-600">Non-ISO</label>
                    </div>
                </div>
                
                <div class="relative w-full sm:w-64">
                    <input 
                        type="text" 
                        id="searchInput" 
                        class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                        placeholder="Cari Test..." 
                    >
                    <div class="absolute left-3 top-2.5 text-gray-400">
                        <i class="fas fa-search"></i>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="responsive-table">
            <table class="min-w-full divide-y divide-gray-200" id="historyTable">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-2 sm:px-4 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tipe</th>
                        <th class="px-2 sm:px-4 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nama Test</th>
                        <th class="px-2 sm:px-4 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider hidden md:table-cell">Dibuat Oleh</th>
                        <th class="px-2 sm:px-4 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider hidden sm:table-cell">Tanggal</th>
                        <th class="px-2 sm:px-4 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Informasi</th>
                        <th class="px-2 sm:px-4 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Aksi</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <% if (allTests && allTests.length > 0) { %>
                        <% allTests.forEach(test => { %>
                            <tr class="hover:bg-gray-50 test-row" data-type="<%= test.type %>">
                                <td class="px-2 sm:px-4 py-2 sm:py-3 whitespace-nowrap text-sm">
                                    <% if (test.type === 'comparison') { %>
                                        <span class="inline-block px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800">
                                            <span class="hidden sm:inline">Komparasi</span>
                                            <span class="sm:hidden">K</span>
                                        </span>
                                    <% } else if (test.type === 'testcase') { %>
                                        <span class="inline-block px-2 py-1 text-xs rounded-full bg-green-100 text-green-800">
                                            <span class="hidden sm:inline">Test Case</span>
                                            <span class="sm:hidden">T</span>
                                        </span>
                                    <% } else if (test.type === 'csvcomparison') { %>
                                        <span class="inline-block px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800">
                                            <span class="hidden sm:inline">CSV/TXT</span>
                                            <span class="sm:hidden">C</span>
                                        </span>
                                    <% } else if (test.type === 'noniso') { %>
                                        <span class="inline-block px-2 py-1 text-xs rounded-full bg-indigo-100 text-indigo-800">
                                            <span class="hidden sm:inline">Non-ISO</span>
                                            <span class="sm:hidden">N</span>
                                        </span>
                                    <% } %>
                                </td>
                                <td class="px-2 sm:px-4 py-2 sm:py-3 whitespace-nowrap text-sm font-medium text-gray-900">
                                    <div class="truncate max-w-[100px] sm:max-w-[150px] md:max-w-xs" title="<%= test.name %>">
                                        <%= test.name %>
                                    </div>
                                    
                                    <!-- Mobile-only creator info -->
                                    <div class="text-xs text-gray-500 md:hidden">
                                        <% if (test.creator) { %>
                                            By: <%= test.creator.name || test.creator.username || 'Unknown' %>
                                        <% } else { %>
                                            By: System
                                        <% } %>
                                    </div>
                                    
                                    <!-- Mobile-only date -->
                                    <div class="text-xs text-gray-500 sm:hidden">
                                        <%= typeof formatDate === 'function' ? formatDate(test.createdAt).split(' ')[0] : new Date(test.createdAt).toLocaleDateString('id-ID') %>
                                    </div>
                                </td>
                                <td class="px-2 sm:px-4 py-2 sm:py-3 whitespace-nowrap text-sm text-gray-500 hidden md:table-cell">
                                    <% if (test.creator) { %>
                                        <%= test.creator.name || test.creator.username || 'Unknown' %>
                                    <% } else { %>
                                        System
                                    <% } %>
                                </td>
                                <td class="px-2 sm:px-4 py-2 sm:py-3 whitespace-nowrap text-sm text-gray-500 hidden sm:table-cell">
                                    <%= typeof formatDate === 'function' ? formatDate(test.createdAt) : new Date(test.createdAt).toLocaleString('id-ID') %>
                                </td>
                                <td class="px-2 sm:px-4 py-2 sm:py-3 whitespace-nowrap text-sm text-gray-500">
                                    <%- include('partials/history-test-info', { test: test, formatFileSize: formatFileSize }) %>
                                </td>
                                <td class="px-2 sm:px-4 py-2 sm:py-3 whitespace-nowrap text-sm text-gray-500">
                                    <div class="flex space-x-1 sm:space-x-2">
                                        <%- include('partials/history-test-actions', { test: test, currentUser: currentUser, canEdit: canEdit }) %>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="6" class="px-4 py-6 text-center text-gray-500">
                                <p>Belum ada riwayat test. Mulai dengan melakukan komparasi atau menambahkan test case!</p>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
        
        <div class="mt-6" id="noResults" style="display: none;">
            <div class="text-center py-8 text-gray-500">
                <p>Tidak ada hasil yang sesuai dengan pencarian Anda.</p>
            </div>
        </div>
    </div>
</div>

<style>
/* Styles specific for History view */
.test-row {
  transition: background-color 0.2s ease;
}

.test-row:hover {
  background-color: rgba(243, 244, 246, 0.7);
}

@media (max-width: 640px) {
  .test-filter {
    margin-right: 0.25rem !important;
  }
}
</style>

<script>
    // Helper function untuk format date jika tidak tersedia dari server
    function formatDate(date) {
        if (!date) return '';
        return new Date(date).toLocaleString('id-ID');
    }
    
    // Helper function untuk format file size jika tidak tersedia dari server
    function formatFileSize(bytes) {
        if (bytes === 0) return '0 Bytes';
        
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }
    
    document.addEventListener('DOMContentLoaded', function() {
        // Variables
        const searchInput = document.getElementById('searchInput');
        const testRows = document.querySelectorAll('.test-row');
        const noResults = document.getElementById('noResults');
        const filters = document.querySelectorAll('.test-filter');
        
        // Search functionality
        searchInput.addEventListener('input', function() {
            filterTable();
        });
        
        // Filter by type functionality
        filters.forEach(filter => {
            filter.addEventListener('change', function() {
                filterTable();
            });
        });
        
        // Table filtering function
        function filterTable() {
            const searchTerm = searchInput.value.toLowerCase();
            let foundResults = false;
            
            // Get active filters
            const activeFilters = Array.from(filters)
                .filter(filter => filter.checked)
                .map(filter => filter.getAttribute('data-type'));
            
            testRows.forEach(row => {
                const testType = row.getAttribute('data-type');
                const testName = row.cells[1].textContent.toLowerCase();
                const creatorCell = row.querySelector('.md\\:hidden, .md\\:table-cell'); // Get either mobile or desktop creator cell
                const creator = creatorCell ? creatorCell.textContent.toLowerCase() : '';
                const testInfo = row.cells[4].textContent.toLowerCase();
                
                // Check type filter first
                const typeMatch = activeFilters.includes(testType);
                
                // Then check search term
                const searchMatch = testName.includes(searchTerm) || 
                                   creator.includes(searchTerm) || 
                                   testInfo.includes(searchTerm);
                
                if (typeMatch && searchMatch) {
                    row.style.display = '';
                    foundResults = true;
                } else {
                    row.style.display = 'none';
                }
            });
            
            // Show/hide no results message
            noResults.style.display = foundResults ? 'none' : 'block';
        }
        
        // Confirm delete for various test types
        document.querySelectorAll('.delete-form').forEach(form => {
            form.addEventListener('submit', function(e) {
                if (!confirm('Apakah Anda yakin ingin menghapus test case ini? Tindakan ini tidak dapat dibatalkan.')) {
                    e.preventDefault();
                }
            });
        });
        
        document.querySelectorAll('.delete-comparison-form').forEach(form => {
            form.addEventListener('submit', function(e) {
                if (!confirm('Apakah Anda yakin ingin menghapus komparasi image ini? Tindakan ini tidak dapat dibatalkan.')) {
                    e.preventDefault();
                }
            });
        });
        
        document.querySelectorAll('.delete-csv-form').forEach(form => {
            form.addEventListener('submit', function(e) {
                if (!confirm('Apakah Anda yakin ingin menghapus komparasi CSV/TXT ini? Tindakan ini tidak dapat dibatalkan.')) {
                    e.preventDefault();
                }
            });
        });
        
        document.querySelectorAll('.delete-noniso-form').forEach(form => {
            form.addEventListener('submit', function(e) {
                if (!confirm('Apakah Anda yakin ingin menghapus komparasi Non-ISO ini? Tindakan ini tidak dapat dibatalkan.')) {
                    e.preventDefault();
                }
            });
        });
        
        // Function to download a comparison
        window.downloadComparison = function(comparisonId) {
            fetch(`/api/comparison/${comparisonId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        // Create a JSON file and trigger download
                        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
                        const url = URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `comparison-${comparisonId}.json`;
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a);
                        URL.revokeObjectURL(url);
                    } else {
                        alert('Failed to download comparison data.');
                    }
                })
                .catch(error => {
                    console.error('Error downloading comparison:', error);
                    alert('Failed to download comparison data.');
                });
        }
    });
</script>

<%- include('partials/footer') %>